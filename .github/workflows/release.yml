on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set Environment
        run: |
          echo ::set-env name=REPOSITORY_USER::$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $1}')
          echo ::set-env name=REPOSITORY_NAME::$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}')
        shell: bash
      - name: Get Previous Tag
        run: |
          CMD_PREVIOUS_TAG=$(git describe --abbrev=0 --tags `git rev-list --tags --skip=1 --max-count=1`)
          echo ${CMD_PREVIOUS_TAG}
          echo ::set-env name=PREVIOUS_TAG::${CMD_PREVIOUS_TAG}
        shell: bash
      - name: Environment
        run: |
          echo "REPOSITORY_USER->${REPOSITORY_USER}"
          echo "REPOSITORY_NAME->${REPOSITORY_NAME}"
          echo "PREVIOUS_TAG->${PREVIOUS_TAG}"
        shell: bash
      - name: Set up Ruby 2.6
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.6'
      - name: Cache bundle directory
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
      - name: Prepare bundler
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Generate CHANGELOG
        id: generate_changelog
        run: |
          bundle exec github_changelog_generator -u $REPOSITORY_USER -p $REPOSITORY_NAME --since-tag $PREVIOUS_TAG --token ${{ secrets.GITHUB_TOKEN }}
#          echo ::set-output name=changelog_path::$(echo `cat ${GITHUB_WORKSPACE}/CHANGELOG.md`)
          echo ::set-output name=changelog_path::$(echo `readlink -f ${GITHUB_WORKSPACE}/CHANGELOG.md`)
      - name: Environment
        run: |
          ls -l "${GITHUB_WORKSPACE}"
          echo　"${GITHUB_WORKSPACE}"
          find `pwd` -maxdepth 1 -type f -name CHANGELOG.md
          cat "${GITHUB_WORKSPACE}/CHANGELOG.md"
          echo　${{ steps.generate_changelog.outputs.changelog_path }}
        shell: bash
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
#          body: |
#            ${{ steps.generate_changelog.outputs.changelog }}
#          body_path: ${GITHUB_WORKSPACE}/CHANGELOG.md
          body_path: ${{ steps.generate_changelog.outputs.changelog_path }}
          draft: false
          prerelease: false
