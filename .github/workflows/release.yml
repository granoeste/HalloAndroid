on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - '*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Build and Create Release and Deploy

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set Up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build with Gradle
        run: ./gradlew assemble
      - name: Verify APK
        run: ./gradlew verifyApk
      - name: Upload Outputs
        uses: actions/upload-artifact@v2
        with:
          name: outputs
          path: app/build/outputs

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set Environment
        run: |
          echo ::set-env name=REPOSITORY_USER::$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $1}')
          echo ::set-env name=REPOSITORY_NAME::$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}')
        shell: bash
      - name: Get Previous Tag
        run: |
          CMD_PREVIOUS_TAG=$(git describe --abbrev=0 --tags `git rev-list --tags --skip=1 --max-count=1`)
          echo ${CMD_PREVIOUS_TAG}
          echo ::set-env name=PREVIOUS_TAG::${CMD_PREVIOUS_TAG}
        shell: bash
      - name: Display Environment
        run: |
          echo "REPOSITORY_USER->${REPOSITORY_USER}"
          echo "REPOSITORY_NAME->${REPOSITORY_NAME}"
          echo "PREVIOUS_TAG->${PREVIOUS_TAG}"
        shell: bash
      - name: Set up Ruby 2.6
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.6'
      - name: Cache Bundle Directory
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
      - name: Prepare Bundler
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Generate Changelog
        id: generate_changelog
        run: |
          bundle exec github_changelog_generator -u $REPOSITORY_USER -p $REPOSITORY_NAME --since-tag $PREVIOUS_TAG --token ${{ secrets.GITHUB_TOKEN }}
          if [[ -e 'CHANGELOG.md' ]]; then
            export CHANGELOG="$(cat CHANGELOG.md | sed ':a;N;$!ba;s/%/%25/g' | sed ':a;N;$!ba;s/\n/%0A/g' | sed ':a;N;$!ba;s/\r/%0D/g')"
          fi
          echo "$CHANGELOG"
          echo ::set-output name=changelog::"${CHANGELOG}"
        shell: bash
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            ${{ steps.generate_changelog.outputs.changelog }}
          draft: false
          prerelease: false
      - name: Download Outputs
        id: download_outputs
        uses: actions/download-artifact@v2
        with:
          name: outputs
          path: outputs
      - name: Display structure of downloaded files
        run: ls -R ./outputs
      - name: Archive Outputs
        uses: montudor/action-zip@v0.1.0
        with:
          args: zip -qq -r ./outputs.zip ./outputs
      - name: Upload Release Asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./outputs.zip
          asset_name: outputs.zip
          asset_content_type: application/zip

  deploy:
    name: Deploy Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download outputs
        id: download_outputs
        uses: actions/download-artifact@v2
        with:
          name: outputs
          path: outputs
      - name: Display structure of downloaded files
        run: ls -R outputs
